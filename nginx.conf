# Based on https://www.nginx.com/resources/wiki/start/topics/examples/full/#nginx-conf
user daemon daemon;

worker_processes auto;
error_log "/opt/bitnami/nginx/logs/error.log";
pid "/opt/bitnami/nginx/tmp/nginx.pid";

events
{
  worker_connections 1024;
}

http
{
  include mime.types;
  default_type application/octet-stream;
  log_format main '$remote_addr - $remote_user [$time_local] '
  '"$request" $status $body_bytes_sent "$http_referer" '
  '"$http_user_agent" "$http_x_forwarded_for"';
  access_log "/opt/bitnami/nginx/logs/access.log";

  gzip on;
  gzip_http_version 1.0;
  gzip_comp_level 2;
  gzip_proxied any;
  gzip_types text/plain text/css application/javascript text/xml application/xml+rss;
  keepalive_timeout 65;
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers HIGH:!aNULL:!MD5;
  client_max_body_size 80M;
  server_tokens off;

  include "/opt/bitnami/nginx/conf/server_blocks/*.conf";
  server
  {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name kognitive.feed-parser.com;
    return 301 https://$host$request_uri;
  }
  # HTTP Server
  server
  {
    # Port to listen on, can also be set in IP:PORT format
    listen 443 ssl http2;
    server_name kognitive.feed-parser.com;

    root /usr/local/kognitive/dist/kognitive/;
    index index.html index.htm;

    location /
    {
      try_files $uri $uri/ /index.html;
    }

    location ~* .(ico|css|js|gif|jpeg|jpg|png|woff|ttf|otf|svg|woff2|eot)$
    {
      expires 5d;
      add_header Cache-Control "public, max-age=31536000";
    }

    location /api/
    {
      proxy_pass https://staging-core-optimy.com;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $remote_addr;
    }
  }
}
